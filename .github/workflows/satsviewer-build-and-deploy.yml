#name: Satsviewer build and deploy
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build_and_deploy:
#    permissions:
#      actions: read
#      checks: read
#      contents: read
#      deployments: write
#      packages: write
#      pull-requests: write
#      id-token: write
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
#      - name: Login to Github Package Registry
#        env:
#          DOCKER_USERNAME: token
#          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin ghcr.io
#      - name: Create Docker tag
#        run: |
#          echo "ghcr.io"/"$GITHUB_REPOSITORY"/"bwtestrep" > .docker_image
#          echo "$(date "+%Y-%m-%d-%H-%M-%S")-$(git rev-parse --short HEAD)" > .docker_tag
#      - name: Build Docker image
#        run: "docker build -t $(cat .docker_image):$(cat .docker_tag) -f ./Dockerfile ./"
#      - name: Push Docker image
#        run: "docker push $(cat .docker_image):$(cat .docker_tag)"
#      - name: Push latest Docker image
#        run: |
#          docker tag $(cat .docker_image):$(cat .docker_tag) $(cat .docker_image):latest
#          docker push $(cat .docker_image):latest
#          echo "IMAGE=$(cat .docker_image):$(cat .docker_tag)" >> $GITHUB_ENV
#      - name: Deploy to dev-gcp
#        uses: nais/deploy/actions/deploy@v2
#        env:
#          CLUSTER: dev-gcp
#          RESOURCE: nais.yml
#          IMAGE: ${{ env.IMAGE }}
#          TEAM: pensjon-regler

name: Build and deploy
on:
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    name: Build, push and deploy
    runs-on: ubuntu-latest
    permissions:
      actions: read
      checks: read
      contents: read
      deployments: write
      packages: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Generate tag
        id: tag
        run: |
          timestamp=$(date -u '+%Y.%m.%d-%H.%M')
          sha=$(git rev-parse --short HEAD)
          echo "TAG=${timestamp}-${sha}" >> $GITHUB_OUTPUT
          echo "Debug - Generated tag value:"
          cat $GITHUB_OUTPUT
      - name: Build and push image and SBOM to OCI registry
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: pensjon-regler
          tag: ${{ steps.tag.outputs.TAG }}
      - name: Deploy to Nais
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais.yml
          VAR: image=${{ steps.docker-build-push.outputs.image }}
          TELEMETRY: ${{ steps.docker-build-push.outputs.telemetry }}